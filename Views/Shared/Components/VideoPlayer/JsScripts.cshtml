<script src="~/js/subtitles-octopus.js"></script>
<script>
    //proměné z dokumentu -constanty 
    const videoContainer = document.querySelector('.video-container');
    const video = document.getElementById('player');
    const controls = document.querySelector('.custom-controls');
    const playPauseBtn = document.getElementById('play-pause-btn');
    const fullscreenBtn = document.getElementById('fullscreen-btn');
    const volumeBtn = document.getElementById('volume-btn');
    const volumeControl = document.getElementById('volume-control');
    const timeline = document.getElementById('timeline');
    const timelineProgress = document.getElementById('timeline-progress');

    //proměné
    var videoID = 0;
    var saveProgres = false;
    var videoSubLanguage = "cs-cz";
    var sourceSub = "";

    let hideControlsTimeout;
    //funce pro vyměnu hodnot
    function getLanguageName(langCode) {
        const languageMap = {
            'cs-cz': 'Čeština',
            'en-gb': 'GB-English',
            // Přidejte další mapování podle potřeby
        };
        return languageMap[langCode] || langCode;
    }

    // Funkce pro zobrazení/skrytí ovládacích prvků
    function showControls() {
        controls.style.opacity = '1';
        clearTimeout(hideControlsTimeout);
        hideControlsTimeout = setTimeout(hideControls, 3000);
        document.body.style.cursor = 'default';
    }

    function hideControls() {
        if (!video.paused) {
            controls.style.opacity = '0';
            document.body.style.cursor = 'none';
        }
    }

    videoContainer.addEventListener('mousemove', showControls);
    videoContainer.addEventListener('mouseout', hideControls);
    controls.addEventListener('mouseenter', () => clearTimeout(hideControlsTimeout));
    controls.addEventListener('mouseleave', () => {
        if (!video.paused) {
            hideControlsTimeout = setTimeout(hideControls, 3000);
        }
    });
    function startUpdating() {
        intervalId = setInterval(() => {
            if (saveProgres) {
                UpdateWatchProgress();
            } else {
                clearInterval(intervalId);
            }
        }, 10000); 
    }
    function UpdateWatchProgress() {
        fetch(`/saveProgress?id=${videoID}&timeSpan=${video.currentTime}`)
            .then(response => response.json())
            .then(data => {
            })
            .catch(error => console.error('Error:', error));
    }

    // Play/Pause funkce
    function togglePlayPause() {
        if (video.paused) {
            video.play();
            saveProgres = true;
            startUpdating();
            playPauseBtn.innerHTML = '<svg viewBox="0 0 24 24"><path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/></svg>';
        } else {
            video.pause();
            saveProgres = false;
            playPauseBtn.innerHTML = '<svg viewBox="0 0 24 24"><path d="M8 5v14l11-7z"/></svg>';
        }
    }

    playPauseBtn.addEventListener('click', togglePlayPause);

    // Fullscreen funkce
    function toggleFullscreen() {
        if (!document.fullscreenElement) {
            if (videoContainer.requestFullscreen) {
                videoContainer.requestFullscreen();
            } else if (videoContainer.mozRequestFullScreen) {
                videoContainer.mozRequestFullScreen();
            } else if (videoContainer.webkitRequestFullscreen) {
                videoContainer.webkitRequestFullscreen();
            } else if (videoContainer.msRequestFullscreen) {
                videoContainer.msRequestFullscreen();
            }
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            }
            closeVideo();
        }
    }

    fullscreenBtn.addEventListener('click', toggleFullscreen);

    // Ovládání hlasitosti
    volumeBtn.addEventListener('click', () => {
        volumeControl.style.display = volumeControl.style.display === 'none' ? 'inline-block' : 'none';
    });

    volumeControl.addEventListener('input', function () {
        video.volume = this.value;
        updateVolumeIcon(this.value);
    });

    function updateVolumeIcon(volume) {
        if (volume > 0.5) {
            volumeBtn.innerHTML = '<svg viewBox="0 0 24 24"><path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/></svg>';
        } else if (volume > 0) {
            volumeBtn.innerHTML = '<svg viewBox="0 0 24 24"><path d="M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z"/></svg>';
        } else {
            volumeBtn.innerHTML = '<svg viewBox="0 0 24 24"><path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/></svg>';
        }
    }

    // Časová osa
    function updateTimeline() {
        const percentage = (video.currentTime / video.duration) * 100;
        timelineProgress.style.width = `${percentage}%`;
    }

    video.addEventListener('timeupdate', updateTimeline);

    timeline.addEventListener('click', (e) => {
        const rect = timeline.getBoundingClientRect();
        const pos = (e.clientX - rect.left) / rect.width;
        video.currentTime = pos * video.duration;
    });

    function subtitles(subtitleId) {
        if (window.octopusInstance) {
            window.octopusInstance.dispose();
        }

        var options = {
            video: document.getElementById('player'),
            subUrl: `${window.location.origin}/subtitles?id=${subtitleId}`,
            debug: false,
            workerUrl: `${window.location.origin}/js/subtitles-octopus-worker.js`
        };
        window.octopusInstance = new SubtitlesOctopus(options);
    }
    const videoOverlay = document.querySelector('.video-overlay');
    const closeButton = document.getElementById('close-video');

    
        function loadVideo(epID,time = "") {
        video.src = `${ window.location.origin }/video?id=${epID}`;
            videoContainer.style.display = "block";
            videoID = epID;

            if (videoContainer.requestFullscreen) {
                videoContainer.requestFullscreen();
            } else if (videoContainer.mozRequestFullScreen) {
                videoContainer.mozRequestFullScreen();
            } else if (videoContainer.webkitRequestFullscreen) {
                videoContainer.webkitRequestFullscreen();
            } else if (videoContainer.msRequestFullscreen) {
                videoContainer.msRequestFullscreen();
            }
        loadSubtitleLanguages();
        startUpdating()
            if (time!="") {
            video.currentTime = time;
            }
        }
    const subtitleBtn = document.getElementById('subtitle-btn');
    const subtitleMenu = document.getElementById('subtitle-menu');

    subtitleBtn.addEventListener('click', toggleSubtitleMenu);

    function toggleSubtitleMenu() {
        if (subtitleMenu.style.display === 'none') {
            loadSubtitleLanguages();
            subtitleMenu.style.display = 'block';
        } else {
            subtitleMenu.style.display = 'none';
        }
    }
    function loadSubtitleLanguages() {
        fetch(`/allSsubtitles?id=${videoID}`)
            .then(response => response.json())
            .then(data => {
                subtitleMenu.innerHTML = '';
                const uniqueLanguages = [...new Set(data.map(item => item.language))];
                uniqueLanguages.forEach(lang => {
                    const button = document.createElement('button');
                    button.className = 'subtitle-button';
                    button.textContent = getLanguageName(lang);
                    button.onclick = () => loadSubtitlesForLanguage(lang, data);
                    subtitleMenu.appendChild(button);
                });
            })
            .catch(error => console.error('Error:', error));
    }
    function loadSubtitlesForLanguage(language, allSubtitles) {
        subtitleMenu.innerHTML = '';
        const languageSubtitles = allSubtitles.filter(sub => sub.language === language);
        languageSubtitles.forEach((sub, index) => {
            const button = document.createElement('button');
            button.className = 'subtitle-button';
            button.textContent = `Titulky ${index + 1}`;
            button.onclick = () => {
                subtitles(sub.id);
                subtitleMenu.style.display = 'none';
            };
            subtitleMenu.appendChild(button);
        });

        // Přidáme tlačítko pro návrat
        const backButton = document.createElement('button');
        backButton.className = 'subtitle-button';
        backButton.textContent = 'Zpět';
        backButton.onclick = loadSubtitleLanguages;
        subtitleMenu.appendChild(backButton);
    }
    function handleFullscreenChange() {
        if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {
            closeVideo();
        }
    }
    function closeVideo() {
        videoContainer.style.display = "none";
        video.pause();
        video.currentTime = 0;
    }

</script>